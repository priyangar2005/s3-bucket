import boto3
from botocore.exceptions import NoCredentialsError,ClientError

ACCESS_KEY = ''
SECRET_KEY = ''
LOCAL_FILE = 'boto3.txt'
BUCKET_NAME = 'my-bucky-2005'
S3_FILE_NAME = 'boto3.txt'

def create_s3_bucket(bucket_name):
    s3 = boto3.client('s3', aws_access_key_id=ACCESS_KEY,
                      aws_secret_access_key=SECRET_KEY)
    try:
        # Create a new bucket with a specific region
        s3.create_bucket(Bucket=bucket_name, CreateBucketConfiguration={
            'LocationConstraint': 'us-east-2'})  # Replace with your region
        print(f"Bucket '{bucket_name}' created successfully.")
    except ClientError as e:
        if e.response['Error']['Code'] == 'BucketAlreadyOwnedByYou':
            print(f"Bucket '{bucket_name}' already exists and is owned by you.")
        elif e.response['Error']['Code'] == 'BucketAlreadyExists':
            print(f"Bucket '{bucket_name}' already exists but is owned by another account.")
        else:
            print(f"Error creating bucket: {e}")
            return False
    except NoCredentialsError:
        print("Credentials not available")
        return False
    return True

def upload_to_s3(local_file, bucket, s3_file):
    s3 = boto3.client('s3', aws_access_key_id=ACCESS_KEY,
                      aws_secret_access_key=SECRET_KEY)
    try:
        s3.upload_file(local_file, bucket, s3_file)
        print("Upload Successful")
        return True
    except FileNotFoundError:
        print("The file was not found")
        return False
    except NoCredentialsError:
        print("Credentials not available")
        return False
    except ClientError as e:
        print(f"Error uploading file: {e}")
        return False

# Create the bucket if it doesn't exist
if create_s3_bucket(BUCKET_NAME):
    # Upload the file to the bucket
    result = upload_to_s3(LOCAL_FILE, BUCKET_NAME, S3_FILE_NAME)
